---
editor: visual
---

# ðŸ“¦ Libraries and Packages

One of the big benefits of *R* in comparison with other statistics packages is its open nature. The functionality is easily extended by groups all around the world by developing libraries that can be easily installed and used.

R packages extend the functionality of R by providing additional functions, data, and documentation. They are written by a worldwide community of R users and can be downloaded for free from the internet.

A **package** is a collection of R functions, data, and compiled code bundled together. Packages are created by the R community and cover a wide range of topics like data manipulation, visualization, machine learning, etc.

## Installing and using a Package

------------------------------------------------------------------------

Packages have to be **installed** [and]{.underline} **loaded** before using them.

We need to install packages only once in our environment. That can be done in two ways:

1.  Using the `install.packages()` function or

2.  Using the *Packages* tab in RStudio:

    ![](images/clipboard-4075559686.png)

For example, in several exercises in this book we use a library (created by for the book [@Baayen_2008]) that contains some utilities and a few sample datasets with linguistics examples.

Let's install the library using the following command:

``` r
install.packages("languageR")
```

::: callout-warning
The installation of a package can give an error if you try to install a package that is already installed and loaded. If you get an error saying that you have already the package, just cancel.
:::

After installing the package, the contents will still not be available until you **load the package**, this has to be done in every new work session and it is done with the `library()` function.

``` r
library(languageR)
```

Now you can access the functions and data in the *languageR* package.

## Using datasets available in packages

------------------------------------------------------------------------

As mentioned, the main objective of a package is to distribute functions, but it is often convenient to include example datasets that can be used to illustrate the use of the functions. In other cases, there are packages that are use mainly to distribute data. The later is the case for example for the `languageR` package, provided as a companion to the book @Baayen_2008 that we will use in some of the examples and assignments in this course.

You can explore data sets available from all loaded packages using the `data()` function. If you want the data from a specific package, specified with the argument `package` .

Take a look at the packages datasets included in `languageR` using the following command.

``` r
data(package="languageR")
```

You will see that a new tab opens in the Editor area with the content:

![](images/clipboard-1927359389.png)

If you want more information more information of a particular dataset, you can use the help operator `?` as with any function.

For example in today's assignment we will use the `lexdec` dataset containing Lexical decision latencies collected from a group of speakers. Run the following command to read the composition of the dataframe.

``` r
?lexdec
```

## Useful packages

------------------------------------------------------------------------

There are by now thousands of community contributed packages available for R and the list grows by the day (see complete list in [CRAN website](https://cran.r-project.org/web/packages/available_packages_by_name.html)).

In practice you will use only a few packages on your data analysis tasks. I list below a number of commonly used packages for further reference (note we will only use a few of those in this course and I will always indicate it in the specific sessions or assignments).

### Packages for data input and output

| Package | Usage | Notes |
|-----------------|----------------------------|----------------------------|
| [*foreign*](https://cran.r-project.org/web/packages/foreign/refman/foreign.html) | Used to read data from other statistical analysis software as SPSS, Stata, etc |  |
| [readxl](https://readxl.tidyverse.org/) | Read Excel files | Part of `tidyverse` |
| [readr](https://readr.tidyverse.org/) | Read information in tabular format from CSV and TAB separated files | Part of `tidyverse` |

### Packages for data analysis

| Package | Usage | Notes |
|-----------------|----------------------------|----------------------------|
| [*foreign*](https://cran.r-project.org/web/packages/foreign/refman/foreign.html) | Used to read data from other statistical analysis software as SPSS, Stata, etc |  |
| readxl |  |  |
|  |  |  |

### Packages for data visualization and manipulation

| Package | Usage | Notes |
|-----------------|----------------------------|----------------------------|
| [*ggplot2*](https://ggplot2.tidyverse.org/) | Library to create graphics and data visualizations | Part of `tidyverse` |
| [dplyr](https://dplyr.tidyverse.org/) | Data manipulation functions | Part of `tidyverse` |
| [tidyr](https://tidyr.tidyverse.org/) | Functions to transform data from wide to long format. | Part of `tidyverse` |
| [forcats](https://forcats.tidyverse.org/) | Functions to modify factors levels and ordering | Part of `tidyverse` |

We will explore functions from the packages above in the Workgroups 1 & 2
